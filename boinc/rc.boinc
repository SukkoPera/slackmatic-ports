#!/bin/sh 

# NOTE: This script needs heavy fixing!

# rc.boinc - BOINC startup/control script for Slackware Linux
#
# Modified by SukkoPera
#
# Original location:
# http://boinc.berkeley.edu/addons/rc.boinc-slackware-linux-latest.txt
#
# Licence: 
# Copyright (c) 2005, 2008, Mark Hill <http://markhill.me.uk/>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#######################################################################
# Program: /etc/rc.d/rc.boinc
# Purpose: A startup and control script for Slackware Linux. 
#######################################################################
# Author:  Mark Hill <http://markhill.me.uk/contact/>
# URL:     <http://markhill.me.uk/articles/boinc_slackware/>
# Version: 2008-09-22 - Removed previous change to boinc_status. Rewrote
# function as grep would sometimes find itself from the ps output
#######################################################################
# Usage: rc.boinc start|stop|restart|reload|force-reload|status
#######################################################################
# Begin user configuration

BOINCEXE_NAME=boinc_client
BOINCCMD_NAME=boinccmd

BOINC_DIR=/var/lib/boinc/   # directory of boinc files - MUST have trailing /
BOINC_BIN=boinc	            # name of the boinc binary
BOINC_USER=root             # user that will run boinc process
BOINC_LOGFILE=/var/log/${BOINCEXE_NAME}.log        # will be created if it does not exist
BOINC_ERRORFILE=/var/log/${BOINCEXE_NAME}_err.log  # as above


# pid file
PIDFILE=/var/run/${BOINCEXE_NAME}.pid

# BOINC options: for the command line when running the client.  
# Be aware that --allow_remote_gui_rpc opens up your machine to the world!
#
# Add this option if you want to allow boinc manager connections from remote
# machines
BOINC_OPTIONS="--allow_remote_gui_rpc"   
# Add this option if you want to turn off all logging
#BOINC_OPTIONS="--daemon"
# Add this option if you want to redirect logging to the files stderrdae.txt
# and stdoutdae.txt in BOINCDIR rather than LOGFILE and ERRORLOG
#BOINC_OPTIONS="--redirectio"
# Add this option if you want to run only when no logins from anywhere are 
# active
#BOINC_OPTIONS="--check_all_logins"
# The default is no options.
#BOINC_OPTIONS=

# End of user configuration
#######################################################################


boinc_status() {
       if ( ps -ef | grep "/usr/bin/$BOINC_BIN$" > /dev/null 2>&1 ); then
		return 0
	else
		return 3
	fi
}

boinc_start() {
        if [ ! -d $BOINC_DIR/projects ] ; then
		echo "WARNING: The BOINC client requires initialization."
#		exit 1
        fi

	PID=$(pidof $BOINCEXE_NAME)
        if [ -z "$PID" ] ; then
		rm -f $PIDFILE
	else
		echo "Another instance of BOINC is running (PID=${PID})."
	fi

#	boinc_status;
#	if [ $? = 0 ]; then
#		echo "BOINC is already running"
#		exit 1;
#	fi

	if [ ! -d $BOINC_DIR ]; then
		echo "ERROR: $BOINC_DIR does not exist"
		exit 1
	elif [ ! -x /usr/bin/$BOINC_BIN ]; then
		echo "ERROR: /usr/bin/$BOINC_BIN does not exist or not executable"
		exit 1
	fi

	echo "Starting BOINC client"
	su - $BOINC_USER -c "/usr/bin/$BOINC_BIN --dir /var/lib/boinc $BOINC_OPTIONS >>$BOINC_LOGFILE 2>>$BOINC_ERRORFILE" &

        PID=$(pidof $BOINCEXE_NAME)
        if [ $PID ]; then
		echo $PID > $PIDFILE
        fi
	
}

boinc_stop() {
	echo "Stopping BOINC client"
	killall $BOINC_BIN 
}

boinc_restart() {
	echo "Restarting BOINC client"

	boinc_status;
	if [ $? = 0 ]; then 
		boinc_stop 
		sleep 3
		boinc_start
	else
		boinc_start
	fi
}

attach() {
	local password args url key
#	local was_started=true

	echo "* Enter the Project URL:"
	read url
	echo "* Enter your Account Key:"
	read key
	echo "* Enter your Account Password:"
	read password

	args="--project_attach ${url} ${key}"

	boinc_start
	sleep 3
#	if ! service_started; then
#		was_started=false
#		"${RC_SERVICE}" start
#	fi

	echo "Attaching to project"
	echo "/usr/bin/$BOINCCMD_NAME --host localhost --passwd ${password} ${args}"
	/usr/bin/$BOINCCMD_NAME --host localhost --passwd ${password} ${args}

	unset password args url key

	sleep 10
	tail "${BOINC_LOGFILE}"

	boinc_stop
}


case "$1" in 
	start)
	  boinc_start
	  exit 0
	;;
	stop)
	  boinc_stop
	  exit 0
	;;
	restart)
	  boinc_restart
	  exit 0
	;;
	status)
	  boinc_status
	  if [ $? = 0 ]; then
		  echo "BOINC is running"
	  else
		  echo "BOINC is not running"
	  fi
	;;
	force-reload)
	 boinc_restart
	 exit 0
	;;
	reload)
	 echo "BOINC is unable to reload config without restart"
	 echo "Try using $0 restart"
	 exit 3
	;;
	attach)
	 attach
	 ;;
	*)
	  echo "Usage: $0 start|stop|restart|reload|force-reload|status"
	  exit 1
	;;

esac
